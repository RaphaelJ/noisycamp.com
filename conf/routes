# Noisycamp is a platform for booking music studios.
# Copyright (C) 2019  Raphael Javaux <raphaeljavaux@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

GET     /                               controllers.IndexController.index

# Authentication

GET     /sign-in                        controllers.AuthController.signIn
POST    /sign-in                        controllers.AuthController.signInSubmit

GET     /sign-up                        controllers.AuthController.signUp
POST    /sign-up                        controllers.AuthController.signUpSubmit

GET     /social/authenticate/:provider  controllers.SocialAuthController.authenticate(provider: String)

# User account

GET     /account                        controllers.account.IndexController.index

GET     /account/studios                controllers.account.StudiosController.index
GET     /account/studios/create         controllers.account.StudiosController.create
POST    /account/studios/create         controllers.account.StudiosController.createSubmit

# Internationalisation

GET     /i18n/currency/set/:currCode    controllers.i18n.Currency.set(currCode: String, redirectTo: Option[String] ?= None)

# Studios

GET     /studios                        controllers.StudiosController.index
GET     /studios/:id                    controllers.StudiosController.show(id: Long)

GET     /studios/:id/book               controllers.studios.Booking.show(id: Long, date: String, time: String, duration: Int)

# Pictures

POST    /pictures                       controllers.PictureController.upload

GET     /pictures/:id                   controllers.PictureController.view(id: String)

GET     /pictures/:id/bound/:size       controllers.PictureController.bound(id: String, size: String)
GET     /pictures/:id/cover/:size       controllers.PictureController.cover(id: String, size: String)
GET     /pictures/:id/max/:size         controllers.PictureController.max(id: String, size: String)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                   controllers.Assets.versioned(path="/public", file: Asset)
